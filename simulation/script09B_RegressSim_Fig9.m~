%% now load all fitted electrodes

clear
sim_nr = 2;
els = 1:22;
nr_elec = length(els);

%%% OUTPUTS:
v_area = NaN(length(els),1); %visual area per electrode

% SIMULATION: 4:bb,g,a,bold, nr els, up to 10 conditions, 8 simulations
all_simulation = NaN(4,length(els),10,8); % BOLD simulation

% SIMULATION output regression models
all_regressmodels = NaN(length(els),7); % r2 for regression models
all_regressbeta   = NaN(length(els),7,4); % betas for regression models

load(fullfile(BOLD_LFPRootPath, 'data', 'boldecog_structure_final'));


for l = 1:nr_elec
    
    elec = els(l);
    
    disp(['el ' int2str(l) ' of ' int2str(nr_elec)])
    v_area(l) = data{l}.v_area;
    
    % load the simulation outputs 
    load(fullfile(BOLD_LFPRootPath, 'data', sprintf('NS_simnr%d_elec%d_simulation_outputs',sim_nr,elec)),'simulation_outputs')
       
    % get simulated ECoG (bb, g, a) and BOLD responses into
    % 'all_simulation' matrix
    all_simulation(:,l,1:size(simulation_outputs,1),:) = permute(simulation_outputs, [3 1 2]);
    
    % load output from the first model (BB - level, G - coh, A - level)
    prm_set = 1;
    load(fullfile(BOLD_LFPRootPath, 'data', sprintf('NS_simnr%d_elec%d_NS_prmset%d',sim_nr,elec,prm_set)),'NS')
    for k = 1:length(NS.stats)
        % cross validated R3:
        all_regressmodels(l,k) = median(NS.stats(k).stats(:,3));
        % beta values:
        temp_beta = median(NS.stats(k).beta(:,2:end),1);
        all_regressbeta(l,k,1:length(temp_beta)) = temp_beta;
    end
end


%% R2 plots averaged for V1 and V2 simulations

bar_colors={[1 0 0],[1 1 0],[1 .5 0],[0 .2 1],[.5 0 1],[0 .5 0],[.4 .2 .1]};

figure('Position',[0 0 580 200])
% CROSS-VALIDATED R^2 when taking all boots
subplot(1,2,1),hold on % plot V1
for k=1:size(all_regressmodels,2)
    bar(k,mean(all_regressmodels(v_area==1,k),1),'FaceColor',bar_colors{k})
    % standard error
    mean_resp = mean(all_regressmodels(v_area==1,k),1);
    st_err = std(all_regressmodels(v_area==1,k))./sqrt(sum(ismember(v_area,1)));
    plot([k k],[mean_resp-st_err mean_resp+st_err],'k')
end
clear mean_resp st_err
xlim([0 8]),ylim([0 1])
set(gca,'XTick',1:7,'XTickLabel',{'bb','g','bb_g','a','bb_a','g_a','bb_g_a'})
set(gca,'YTick',0:.2:1)
title('V1 R^2 cross-val')

subplot(1,2,2),hold on % plot V2/V3
for k=1:size(all_regressmodels,2)
    bar(k,mean(all_regressmodels(v_area==2 | v_area==3,k),1),'FaceColor',bar_colors{k})
    % standard error
    mean_resp = mean(all_regressmodels(v_area==2 | v_area==3,k),1);
    st_err = std(all_regressmodels(v_area==2 | v_area==3,k))./sqrt(sum(ismember(v_area,[2 3])));
    plot([k k],[mean_resp-st_err mean_resp+st_err],'k')
end
clear mean_resp st_err
xlim([0 8]),ylim([0 1])
set(gca,'XTick',1:7,'XTickLabel',{'bb','g','bb_g','a','bb_a','g_a','bb_g_a'})
set(gca,'YTick',0:.2:1)
title('V2/V3 R^2 cross-val')

set(gcf,'PaperPositionMode','auto')
% print('-dpng','-r300',['../figures/sim' int2str(sim_nr) '/r2_plotsV1V23'])
% print('-depsc','-r300',['../figures/sim' int2str(sim_nr) '/r2_plotsV1V23']) 

disp(['V1 R^2:' num2str(mean(all_regressmodels(v_area==1,:),1))])
disp(['V2 R^2:' num2str(mean(all_regressmodels(v_area==2 | v_area==3,:),1))])

%% BETA plots averaged for V1 and V2 simulations

labels_beta={{'bb','',''},{'','g',''},{'bb','g',''},{'','','a'},...
    {'bb','','a'},{'','g','a'},{'bb','g','a'}};
labels_index={1,2,[1 2],3,[1 3],[2 3],[1 2 3]};
bb_g_a_color={[.9 .9 .9],[.6 .6 .6],[.3 .3 .3]};

% plot V1
figure('Position',[0 0 450 100])
for k=1:size(all_regressbeta,2)
    xl_ind=labels_index{k};
    subplot(1,size(all_regressbeta,2)*2,k),hold on 
    
    for m=1:3 % nr of betas
        % take the median across the bootstraps for each electrode
        temp_beta=all_regressbeta(v_area==1,k,m);
        if ~isnan(temp_beta)
            % plot mean across electrodes
            bar(xl_ind(m),mean(temp_beta),.7,'FaceColor',bb_g_a_color{xl_ind(m)})
            % plot 2 x standard error as error bar
            st_err = std(temp_beta)./sqrt(length(temp_beta));
            plot([xl_ind(m) xl_ind(m)],[mean(temp_beta)-st_err mean(temp_beta)+st_err],'k')
            % test for significant difference from zero across electrodes using a t-test
            [~,p]=ttest(temp_beta);
            if p<=0.05
                plot(xl_ind(m),-.2,'r*')
            end
        end
    end
    xlim([.5 3.5]),ylim([-.2 .4])
    set(gca,'XTick',1:3,'XTickLabel',labels_beta{k},'YTick',-0.4:.2:.8,'YTickLabel',[])
end

% plot V2/V3
for k=1:size(all_regressbeta,2)
    xl_ind=labels_index{k};
    subplot(1,size(all_regressbeta,2)*2,size(all_regressbeta,2)+k),hold on 

    for m=1:3 % nr of betas
        % take the median across the bootstraps for each electrode
        temp_beta=all_regressbeta(v_area==2 | v_area==3,k,m);
        if ~isnan(temp_beta)
            % plot mean across electrodes
            bar(xl_ind(m),mean(temp_beta),.7,'FaceColor',bb_g_a_color{xl_ind(m)})
            % plot 2 x standard error as error bar
            st_err = std(temp_beta)./sqrt(length(temp_beta));
            plot([xl_ind(m) xl_ind(m)],[mean(temp_beta)-st_err mean(temp_beta)+st_err],'k')
            % test for significant difference from zero across electrodes using a t-test
            [~,p]=ttest(temp_beta);
            if p<=0.05
                plot(xl_ind(m),-.2,'r*')
            end
        end
    end   
    xlim([.5 3.5]),ylim([-.2 .4])
    set(gca,'XTick',1:3,'XTickLabel',labels_beta{k},'YTick',-0.4:.2:.8,'YTickLabel',[])
end

% set(gcf,'PaperPositionMode','auto')
% print('-dpng','-r300',['../figures/sim' int2str(sim_nr) '/beta_plotsV1V23'])
% print('-depsc','-r300',['../figures/sim' int2str(sim_nr) '/beta_plotsV1V23'])


